{"version":3,"sources":["components/forms/login/login.module.scss","components/ui/button/button.module.scss","components/forms/checkbox/checkbox.module.scss","components/forms/filterForm/filter.module.scss","components/todos/todos.module.scss","components/forms/addItemForm/addItemForm.module.scss","components/forms/searchForm/searchForm.module.scss","components/todos/todoItem/item.module.scss","app.module.scss","components/ui/spinner/spinner.module.scss","api/auth.ts","redux/actions/error.ts","redux/actions/auth.ts","components/ui/button/button.tsx","components/ui/message/message.tsx","components/forms/login/loginForm.tsx","api/api.ts","redux/actions/todos.ts","components/forms/addItemForm/addItemForm.tsx","components/forms/filterForm/filterForm.tsx","components/forms/searchForm/searchForm.tsx","components/ui/spinner/spinnes.tsx","components/forms/checkbox/checkbox.tsx","components/todos/todoItem/todoItem.tsx","components/todos/todos.tsx","App.tsx","reportWebVitals.ts","redux/reducers/auth.ts","redux/reducers/todos.ts","redux/store.ts","index.tsx"],"names":["module","exports","register","data","payload","returnSecureToken","axios","post","then","res","login","onErrorMsgCommon","e","dispatch","undefined","response","msg","error","message","setMessage","setTimeout","SET_LOADING","SET_MESSAGE","SET_TOKEN","ON_SESSION_EXPIRED","setAuthLoading","loading","type","setToken","token","onSessionExpired","expires","logout","localStorage","removeItem","fetchAuth","fetchType","a","local","expiresIn","Date","getTime","toString","setItem","idToken","localId","Button","children","onClick","status","clss","styles","button","push","text","active","className","join","Message","Login","useState","requestType","setRequestType","useDispatch","useSelector","state","auth","formik","useFormik","initialValues","email","password","validate","values","errors","test","length","onSubmit","resetForm","onLogHandler","loginHeader","handleSubmit","touched","style","color","loginEmail","placeholder","getFieldProps","onBlur","handleBlur","loginPassword","loginBtns","instance","create","baseURL","createTask","deleteTask","id","delete","updateTask","put","GET_ITEMS","SET_TODO_LOADING","setLoading","fetchGetTasks","get","arr","Object","entries","map","value","items","fetchUpdateTask","getState","tasks","todos","item","find","el","isImportant","isDone","AddItemForm","setValue","setError","onAddItem","trim","fetchCreateTasks","label","addItemForm","addInput","onChange","currentTarget","onKeyDown","key","FilterForm","filterValueChange","setActive","btns","name","isActive","filter","filterForm","buttons","filterBtns","SearchForm","onSearch","searchForm","searchInput","Spinner","loader","Checkbox","checked","important","cls","done","checkbox","TodoItem","fetchDeleteTask","Todos","setFilter","search","setSearch","todoList","isLoading","useEffect","resultFilter","fltr","onFilter","mappedResult","toLowerCase","indexOf","wrapper","todosHeader","App","isAuth","getItem","expiresDate","isAuthorised","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df712e16.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"login_login__PxVTy\",\"loginBtns\":\"login_loginBtns__29qCG\",\"loginEmail\":\"login_loginEmail__2kUA9\",\"loginPassword\":\"login_loginPassword__2nh8v\",\"loginHeader\":\"login_loginHeader__3nIq2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__2kISy\",\"text\":\"button_text__1NwZZ\",\"active\":\"button_active__3trUt\",\"logout\":\"button_logout__2Qca7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"checkbox_label__34IJb\",\"checkbox\":\"checkbox_checkbox__1bdqy\",\"click-wave\":\"checkbox_click-wave__iMDEP\",\"done\":\"checkbox_done__3CuzK\",\"important\":\"checkbox_important__2UuKm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"filter_buttons__X7rLG addItemForm_addItemForm__3Fq-e\",\"filterBtns\":\"filter_filterBtns__2mvlY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"todos_wrapper__Up_T8\",\"todosHeader\":\"todos_todosHeader__Zafb1\",\"todos\":\"todos_todos__3oEaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addItemForm\":\"addItemForm_addItemForm__3Fq-e\",\"addInput\":\"addItemForm_addInput__3MBPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"searchForm_searchForm__3JFPl addItemForm_addItemForm__3Fq-e\",\"searchInput\":\"searchForm_searchInput__2R9wS addItemForm_addInput__3MBPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"item_item__11Q1_\",\"buttons\":\"item_buttons__1IbBT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__1e3hH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"spinner_loader__3sHMm\",\"rotate\":\"spinner_rotate__224iU\",\"ball1\":\"spinner_ball1__2WlnR\",\"ball2\":\"spinner_ball2__4oBp_\"};","import axios from \"axios\"\r\nimport { dataType } from \"../components/forms/login/loginForm\"\r\n\r\nexport const register = (data: dataType) => {\r\n  const payload = { ...data, returnSecureToken: true }\r\n  return axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDrVAch5O5F0nlHLgH_ex0ny_2GwbrN-Zs`,payload).then((res)=>res)\r\n}\r\n\r\nexport const login = (data: dataType) => {\r\n  const payload = { ...data, returnSecureToken: true }\r\n  return axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDrVAch5O5F0nlHLgH_ex0ny_2GwbrN-Zs `, payload).then((res)=>res)\r\n}","import { Dispatch } from \"redux\"\r\nimport { setMessage } from \"./auth\"\r\n\r\nexport const onErrorMsgCommon = (e: any, dispatch: Dispatch) => {\r\n  \r\n  if (e.response === undefined) {\r\n   return\r\n  }\r\n  let msg = e.response.data.error.message\r\n  dispatch(setMessage(msg))\r\n    setTimeout(() => {\r\n      dispatch(setMessage(''))\r\n    },2000)\r\n}","\r\nimport { Dispatch } from 'redux';\r\nimport { login, register } from '../../api/auth';\r\nimport { dataType } from '../../components/forms/login/loginForm';\r\nimport { onErrorMsgCommon } from './error';\r\n\r\nexport const SET_LOADING = 'SET_LOADING'\r\nexport const SET_AUTH = 'SET_AUTH'\r\nexport const SET_MESSAGE = 'SET_MESSAGE'\r\nexport const SET_TOKEN = 'SET_TOKEN'\r\nexport const ON_SESSION_EXPIRED = 'ON_SESSION_EXPIRED'\r\n\r\nexport type authActionType = setLoadingType | setMessageType | setTokenType | removeTokenType\r\n\r\nexport type setLoadingType = ReturnType<typeof setAuthLoading>\r\nexport type setMessageType = ReturnType<typeof setMessage>\r\n\r\ntype setTokenType = ReturnType<typeof setToken>\r\ntype removeTokenType = ReturnType<typeof removeToken>\r\n\r\nexport const setAuthLoading = (loading: boolean) => {\r\n  return { type: SET_LOADING, loading } as const\r\n}\r\nexport const setMessage = (message: string) => {\r\n  return { type: SET_MESSAGE, message } as const\r\n}\r\n\r\n\r\nexport const setToken = (token: string) => {\r\n  return { type: SET_TOKEN, token } as const\r\n}\r\n\r\nexport const removeToken = () => {\r\n  return { type: ON_SESSION_EXPIRED } as const\r\n}\r\n\r\nexport function onSessionExpired(expires: number) {\r\n  return (dispatch: Dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, expires * 1000);\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"localId\");\r\n  localStorage.removeItem(\"expiresIn\");\r\n  return {\r\n    type: ON_SESSION_EXPIRED,\r\n  };\r\n}\r\n\r\n\r\nexport const fetchAuth = (data: dataType, fetchType: number) => async (dispatch: Dispatch) => {\r\n  dispatch(setAuthLoading(true))\r\n  try {\r\n    const res = fetchType === 0 ? await register(data) : await login(data)\r\n\r\n    fetchType === 0 && dispatch(setMessage('Welcome on board!'))\r\n\r\n    const local = res.data\r\n    let expiresIn = new Date(new Date().getTime() + local.expiresIn * 1000).toString();\r\n\r\n    localStorage.setItem(\"token\", local.idToken);\r\n    localStorage.setItem(\"localId\", local.localId);\r\n    localStorage.setItem(\"expiresIn\", expiresIn);\r\n\r\n    dispatch(setToken(local.idToken));\r\n\r\n    dispatch(onSessionExpired(local.expiresIn) as any);\r\n\r\n    fetchType === 0 && setTimeout(() => {\r\n      dispatch(setMessage(''))\r\n    }, 2000)\r\n  }\r\n  catch (e) {\r\n    onErrorMsgCommon(e, dispatch)\r\n  }\r\n  dispatch(setAuthLoading(false))\r\n}\r\n\r\n\r\nexport function autoLogin() {\r\n\r\n  return (dispatch: Dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      dispatch(logout());\r\n    } else {\r\n\r\n      const expiresDate = new Date(localStorage.getItem(\"expiresIn\") as string | number | Date);\r\n      if (expiresDate <= new Date()) {\r\n        dispatch(logout());\r\n      } else {\r\n        dispatch(setToken(token));\r\n\r\n        dispatch(onSessionExpired((expiresDate.getTime() - new Date().getTime()) / 1000) as any);\r\n      }\r\n    }\r\n  };\r\n}\r\n","import React from 'react'\r\nimport styles from './button.module.scss'\r\n\r\ntype buttonType = {\r\n  children: React.ReactNode;\r\n  onClick: () => void\r\n  type?: string\r\n  status?: boolean\r\n};\r\n\r\nconst Button: React.FC<buttonType> = ({ children, onClick, type, status }) => {\r\n\r\n  const clss = [\r\n    styles.button\r\n  ]\r\n  type && clss.push(styles.text)\r\n  status && clss.push(styles.active)\r\n  type === 'logout' && clss.push(styles.logout)\r\n  return (\r\n    <button\r\n      className={clss.join(' ')}\r\n      onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\nexport default Button","import React from 'react'\r\nimport  './message.scss'\r\n\r\nconst Message:React.FC<{text:string}> = ({ text }) => {\r\n  return (\r\n    <span className={'message'}>{text}</span>\r\n  )\r\n}\r\nexport default Message","import React, { useState } from 'react'\r\nimport { useFormik } from \"formik\";\r\nimport styles from './login.module.scss'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootStateType } from '../../../redux/store';\r\nimport { fetchAuth } from '../../../redux/actions/auth';\r\nimport Button from '../../ui/button/button';\r\nimport Message from '../../ui/message/message';\r\n\r\n\r\n\r\n\r\ntype formikErrorType = {\r\n  email?: string;\r\n  password?: string;\r\n};\r\nexport type dataType = {\r\n  email: string;\r\n  password: string;\r\n};\r\n\r\nconst Login = () => {\r\n  const [requestType, setRequestType] = useState<string>('')\r\n  const dispatch = useDispatch()\r\n  const message = useSelector<RootStateType, string>((state) => state.auth.message)\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\"\r\n    },\r\n    validate: (values) => {\r\n      const errors: formikErrorType = {};\r\n      if (!values.email) {\r\n        errors.email = \"Required\";\r\n      } else if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n      ) {\r\n        errors.email = \"Invalid email address\";\r\n      }\r\n      if (values.password.length < 5) {\r\n        errors.password = \"Too Short password\";\r\n      }\r\n      return errors;\r\n    },\r\n\r\n    onSubmit: (values: dataType) => {\r\n      requestType === \"login\" && dispatch(fetchAuth(values, 1));\r\n      requestType === \"register\" && dispatch(fetchAuth(values, 0));\r\n      formik.resetForm();\r\n    },\r\n  });\r\n\r\n\r\n  const onLogHandler = (type: string) => {\r\n    setRequestType(type)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2 className={styles.loginHeader}>Login or register</h2>\r\n      <form className={styles.login} onSubmit={formik.handleSubmit}>\r\n        {formik.errors.email && formik.touched.email ? (\r\n          <div style={{ color: \"red\" }}>{formik.errors.email}</div>\r\n        ) : null}\r\n        <input\r\n          type={\"email\"}\r\n          className={styles.loginEmail}\r\n          placeholder={\"type your email\"}\r\n          {...formik.getFieldProps(\"email\")}\r\n          onBlur={formik.handleBlur}\r\n        />\r\n        {formik.errors.password && formik.touched.password ? (\r\n          <div style={{ color: \"red\" }}>{formik.errors.password}</div>\r\n        ) : null}\r\n        <input\r\n          type={\"password\"}\r\n          className={styles.loginPassword}\r\n          placeholder={\"type your password\"}\r\n          {...formik.getFieldProps(\"password\")}\r\n          onBlur={formik.handleBlur}\r\n        />\r\n\r\n        <div className={styles.loginBtns}>\r\n          <Button type={\"login\"} onClick={() => onLogHandler(\"login\")}>\r\n            login\r\n          </Button>\r\n          <Button type={\"register\"} onClick={() => onLogHandler(\"register\")}>\r\n            register\r\n          </Button>\r\n        </div>\r\n      </form>\r\n      {message && <Message text={message} />}\r\n    </>\r\n  );\r\n}\r\nexport default Login","import axios from \"axios\"\r\nimport { createItemType } from \"../components/forms/addItemForm/addItemForm\"\r\nimport { itemType } from \"../redux/reducers/todos\"\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://todotest-3747d-default-rtdb.firebaseio.com',\r\n})\r\n\r\nexport const getTasks = () => {\r\n  return instance.get<Array<itemType>>(`/todos.json`)\r\n    .then((response) => response.data)\r\n}\r\nexport const createTask = (payload: createItemType) => {\r\n  return instance.post(`/todos.json`, payload)\r\n    .then((response) => {\r\n      return response.data\r\n    })\r\n}\r\nexport const deleteTask = (id: string) => {\r\n  return instance.delete(`/todos/${id}.json`,)\r\n    .then((response) => {\r\n      return response.data\r\n    })\r\n}\r\nexport const updateTask = (id: string, payload: itemType) => {\r\n  return instance.put(`/todos/${id}.json`,payload)\r\n    .then((response) => {\r\n     return response.data\r\n    })\r\n}\r\n\r\n","\r\nimport { Action, Dispatch } from \"redux\"\r\nimport { ThunkAction } from \"redux-thunk\"\r\nimport { createTask, deleteTask, getTasks, updateTask } from \"../../api/api\"\r\nimport { createItemType } from \"../../components/forms/addItemForm/addItemForm\"\r\nimport { itemType } from \"../reducers/todos\"\r\nimport { RootStateType } from \"../store\"\r\nimport { setMessageType } from \"./auth\"\r\nimport { onErrorMsgCommon } from \"./error\"\r\n\r\nexport const GET_ITEMS = \"GET_ITEMS\"\r\nexport const SET_TODO_LOADING = 'SET_TODO_LOADING'\r\nexport const ADD_TASK = 'ADD_TASK'\r\n\r\nexport type todosActionsType = getItemsType | setLoadingType | setMessageType\r\n\r\n\r\ntype getItemsType = ReturnType<typeof getAllItems>\r\ntype setLoadingType = ReturnType<typeof setLoading>\r\n\r\n\r\nexport const getAllItems = (items: Array<itemType>) => {\r\n  return { type: GET_ITEMS, items } as const\r\n}\r\nexport const setLoading = (loading: boolean) => {\r\n  return { type: SET_TODO_LOADING, loading } as const\r\n}\r\n\r\n\r\nexport const fetchGetTasks = () => async (dispatch: Dispatch) => {\r\n  dispatch(setLoading(true))\r\n  try {\r\n    const res = await getTasks()\r\n    let arr = [] as Array<itemType>\r\n    if (res !== null) {\r\n      arr = Object.entries(res).map(([id, value]) => {\r\n        return { ...value, id: id }\r\n      })\r\n    }\r\n    dispatch(getAllItems(arr))\r\n  }\r\n  catch (e) {\r\n    onErrorMsgCommon(e, dispatch)\r\n  }\r\n  dispatch(setLoading(false))\r\n}\r\n\r\n\r\nexport const fetchCreateTasks = (payload: createItemType): ThunkType => async (dispatch) => {\r\n  try {\r\n    await createTask(payload)\r\n    dispatch(fetchGetTasks())\r\n  }\r\n  catch (e) {\r\n    onErrorMsgCommon(e, dispatch)\r\n  }\r\n\r\n}\r\n\r\nexport const fetchDeleteTask = (id: string): ThunkType => async (dispatch) => {\r\n  try {\r\n    await deleteTask(id)\r\n    dispatch(fetchGetTasks())\r\n  }\r\n  catch (e) {\r\n    onErrorMsgCommon(e, dispatch)\r\n  }\r\n}\r\n\r\nexport const fetchUpdateTask = (id: string, status: number): ThunkType => async (dispatch, getState) => {\r\n  const tasks = getState().todos.todos\r\n  const item = tasks.find((el) => el.id === id)\r\n  if (item) {\r\n    const payload = { ...item }\r\n    if (status === 0) {\r\n      payload.isImportant = !payload.isImportant\r\n    }\r\n    if (status === 1) {\r\n      payload.isDone = !payload.isDone\r\n    }\r\n    try {\r\n      await updateTask(id, payload)\r\n      dispatch(fetchGetTasks())\r\n    }\r\n    catch (e) {\r\n      onErrorMsgCommon(e, dispatch)\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport type BaseThunkType<A extends Action = Action, R = Promise<void>> = ThunkAction<R, RootStateType, unknown, A>\r\ntype ThunkType = BaseThunkType<getItemsType>\r\n","import React, { ChangeEvent, useState } from 'react'\r\nimport { FaPlusSquare } from 'react-icons/fa'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchCreateTasks } from '../../../redux/actions/todos'\r\nimport Button from '../../ui/button/button'\r\nimport styles from './addItemForm.module.scss'\r\n\r\n\r\nexport type createItemType = {\r\n  label: string\r\n  isDone: boolean\r\n  isImportant: boolean\r\n}\r\n\r\nconst AddItemForm = () => {\r\n  const [value, setValue] = useState<string>('')\r\n  const [error, setError] = useState<boolean>(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onAddItem = () => {\r\n    if (!error) {\r\n      if (value.trim() === '') {\r\n        setValue('')\r\n        return\r\n      }\r\n      const payload = { label: value, isDone: false, isImportant: false }\r\n      dispatch(fetchCreateTasks(payload));\r\n      setValue(\"\");\r\n    }\r\n\r\n  }\r\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let text = e.currentTarget.value\r\n    text.length > 50 ? setError(true) : setError(false)\r\n    setValue(text)\r\n  };\r\n\r\n  const onKeyDownHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    e.key === 'Enter' && onAddItem()\r\n    e.key === 'Escape' && setValue('')\r\n  };\r\n  return (\r\n    <>\r\n      <div className={styles.addItemForm}>\r\n        <input\r\n          type={\"text\"}\r\n          placeholder={\"type here to add todo\"}\r\n          className={styles.addInput}\r\n          value={value}\r\n          onChange={onChangeHandler}\r\n          onKeyDown={onKeyDownHandler}\r\n        />\r\n        <Button onClick={onAddItem}>\r\n          <FaPlusSquare style={{ color: \"blue\" }} />\r\n        </Button>\r\n      </div>\r\n      {error && <span style={{ color: 'red' }}>Too long. Task name must be less then 50 characters length. </span>}\r\n    </>\r\n  );\r\n}\r\nexport default AddItemForm","import React, { useState } from 'react'\r\nimport Button from '../../ui/button/button';\r\nimport styles from './filter.module.scss'\r\n\r\nexport type filterType = 'all' | 'done' | 'todo' | 'important'\r\ntype filterFormType = {\r\n  filterValueChange: (filter: filterType) => void;\r\n};\r\nconst FilterForm: React.FC<filterFormType> = ({ filterValueChange }) => {\r\n  const [active, setActive] = useState<filterType>('all')\r\n\r\n  const onClickHandler = (filter: filterType) => {\r\n    filterValueChange(filter);\r\n    setActive(filter)\r\n  };\r\n\r\n  const btns = [\r\n    { name: \"all\" },\r\n    { name: \"done\" },\r\n    { name: \"todo\" },\r\n    { name: \"important\" },\r\n  ].map((el) => {\r\n    let isActive = el.name === active;\r\n    return (\r\n\r\n      <Button\r\n        key={el.name}\r\n        onClick={() => onClickHandler(el.name as filterType)}\r\n        type=\"text\"\r\n        status={isActive}\r\n      >\r\n        {el.name}\r\n      </Button>\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      <div className={styles.filterForm}>\r\n      </div>\r\n      <div className={styles.buttons}>\r\n        <h4>Filter tasks by: </h4>\r\n        <div className={styles.filterBtns}>{btns}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default FilterForm","import React, { ChangeEvent, useState } from 'react'\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport styles from './searchForm.module.scss'\r\n\r\n\r\ntype searchFormType = {\r\n  onSearch: (value: string) => void\r\n}\r\nconst SearchForm: React.FC<searchFormType> = ({ onSearch }) => {\r\n  const [value, setValue] = useState<string>('')\r\n\r\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onSearch(e.currentTarget.value)\r\n    setValue(e.currentTarget.value);\r\n  };\r\n  return (\r\n    <>\r\n      <div className={styles.searchForm}>\r\n        <input\r\n          type={\"text\"}\r\n          placeholder={\"type here to find the task\"}\r\n          className={styles.searchInput}\r\n          value={value}\r\n          onChange={onChangeHandler}\r\n        />\r\n\r\n        <FaSearch style={{ color: 'grey' }} />\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default SearchForm","import React from 'react'\r\nimport styles from './spinner.module.scss'\r\n\r\nconst Spinner = () => {\r\n  return <div className={styles.loader}></div>;\r\n}\r\nexport default Spinner","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchUpdateTask } from '../../../redux/actions/todos'\r\nimport styles from './checkbox.module.scss'\r\n\r\ntype checkboxType = {\r\n  label: string\r\n  checked: boolean\r\n  id: string\r\n  important: boolean\r\n}\r\nconst Checkbox: React.FC<checkboxType> = ({ label, checked, id, important }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const onChangeHandler = () => {\r\n    dispatch(fetchUpdateTask(id, 1));\r\n  };\r\n  const cls = [\r\n    styles.label\r\n  ]\r\n  checked && cls.push(styles.done)\r\n  important && cls.push(styles.important)\r\n  return (\r\n    <label className={cls.join(' ')}>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={checked}\r\n        className={styles.checkbox}\r\n        onChange={onChangeHandler}\r\n      />\r\n      {label}\r\n    </label>\r\n\r\n\r\n  )\r\n}\r\nexport default Checkbox","import React from \"react\";\r\nimport {\r\n  FaStar,\r\n  FaTrashAlt,\r\n} from \"react-icons/fa\";\r\nimport styles from \"./item.module.scss\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchDeleteTask, fetchUpdateTask } from \"../../../redux/actions/todos\";\r\nimport Checkbox from \"../../forms/checkbox/checkbox\";\r\nimport Button from \"../../ui/button/button\";\r\n\r\n\r\ntype listItemType = {\r\n  label: string;\r\n  isDone: boolean;\r\n  important: boolean;\r\n  id: string\r\n};\r\nconst TodoItem: React.FC<listItemType> = ({ label, isDone, important, id }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const onChangeImportance = () => {\r\n    dispatch(fetchUpdateTask(id, 0));\r\n  }\r\n  const onDeleteHandler = () => {\r\n    dispatch(fetchDeleteTask(id));\r\n  }\r\n  return (\r\n    <li className={styles.item}>\r\n      <Checkbox label={label} id={id} checked={isDone} important={important} />\r\n      <div className={styles.buttons}>\r\n        <Button onClick={onChangeImportance}>\r\n          <FaStar style={{ color: \"green\" }} />\r\n        </Button>\r\n        <Button onClick={onDeleteHandler}>\r\n          <FaTrashAlt style={{ color: \"red\" }} />\r\n        </Button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\nexport default TodoItem;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout } from '../../redux/actions/auth'\r\nimport { fetchGetTasks } from '../../redux/actions/todos'\r\nimport { itemType } from '../../redux/reducers/todos'\r\nimport { RootStateType } from '../../redux/store'\r\nimport AddItemForm from '../forms/addItemForm/addItemForm'\r\nimport FilterForm, { filterType } from '../forms/filterForm/filterForm'\r\nimport Button from '../ui/button/button'\r\nimport Message from '../ui/message/message'\r\nimport SearchForm from '../forms/searchForm/searchForm'\r\nimport Spinner from '../ui/spinner/spinnes'\r\nimport TodoItem from './todoItem/todoItem'\r\nimport styles from './todos.module.scss'\r\n\r\n\r\nconst Todos = () => {\r\n  const [filter, setFilter] = useState<filterType>('all')\r\n  const [search, setSearch] = useState<string>('')\r\n  const todoList = useSelector<RootStateType, Array<itemType>>((state) => state.todos.todos)\r\n  const isLoading = useSelector<RootStateType, boolean>((state) => state.todos.loading)\r\n  const message = useSelector<RootStateType, string>((state) => state.todos.error)\r\n\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchGetTasks());\r\n  }, [])\r\n\r\n  const onLogout = () => {\r\n    dispatch(logout())\r\n    dispatch(fetchGetTasks())\r\n  }\r\n\r\n  const filterValueChange = (value: filterType) => {\r\n    setFilter(value)\r\n  }\r\n\r\n  const onFilter = (fltr: filterType, arr: Array<itemType>) => {\r\n    switch (fltr) {\r\n      case 'all': return arr\r\n      case 'done': return arr.filter((el) => el.isDone)\r\n      case 'todo': return arr.filter((el) => !el.isDone)\r\n      case 'important': return arr.filter((el) => el.isImportant)\r\n      default: return arr\r\n    }\r\n  }\r\n  const resultFilter = onFilter(filter, todoList)\r\n\r\n  const resultSearch = (value: string, arr: Array<itemType>) => {\r\n    if (!value) { return arr }\r\n    return arr.filter((el) => {\r\n      return el.label.toLowerCase().indexOf(value.toLowerCase()) > -1\r\n    })\r\n  }\r\n\r\n  const onSearch = (value: string) => {\r\n    setSearch(value)\r\n  };\r\n\r\n  const mappedResult = resultSearch(search, resultFilter).map(\r\n    ({ id, label, isDone, isImportant }) => {\r\n      return (\r\n        <TodoItem\r\n          key={id}\r\n          label={label}\r\n          isDone={isDone}\r\n          important={isImportant}\r\n          id={id}\r\n        />\r\n      );\r\n    }\r\n  );\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <h1 className={styles.todosHeader}>Daily tasks</h1>\r\n      {message ? (\r\n        <Message text={message} />\r\n      ) : (\r\n        <>\r\n          <SearchForm onSearch={onSearch} />\r\n          <FilterForm filterValueChange={filterValueChange} />\r\n          <ul className={styles.todos}>\r\n            {isLoading ? <Spinner /> : mappedResult}\r\n          </ul>\r\n          <AddItemForm />\r\n        </>\r\n      )}\r\n      <Button onClick={onLogout} type={\"logout\"}>\r\n        Logout\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\nexport default Todos","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styles from './app.module.scss';\r\nimport Login from './components/forms/login/loginForm';\r\nimport Todos from './components/todos/todos';\r\nimport Spinner from './components/ui/spinner/spinnes';\r\nimport { autoLogin } from './redux/actions/auth';\r\nimport { RootStateType } from './redux/store';\r\n\r\n\r\nfunction App() {\r\n  const isLoading = useSelector<RootStateType, boolean>((state) => state.auth.isLoading)\r\n  const isAuth = useSelector<RootStateType, string>((state)=>state.auth.token)\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(autoLogin());\r\n  },[])\r\n\r\n  const isAuthorised = isAuth ? <Todos/> : <Login />\r\n  return (\r\n    <div className={styles.app}>\r\n     {isLoading ? <Spinner/> : isAuthorised}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { authActionType, ON_SESSION_EXPIRED, SET_LOADING, SET_MESSAGE, SET_TOKEN } from \"../actions/auth\"\r\n\r\ntype authStateType = typeof initState\r\n\r\nconst initState = {\r\n  isLoading: false,\r\n  message: '',\r\n  token: ''\r\n}\r\nexport const authReducer = (state: authStateType = initState, action: authActionType): authStateType => {\r\n  switch (action.type) {\r\n    case SET_LOADING:\r\n      return { ...state, isLoading: action.loading }\r\n    case SET_MESSAGE:\r\n      return { ...state, message: action.message }\r\n    case SET_TOKEN:\r\n      return { ...state, token: action.token }\r\n    case ON_SESSION_EXPIRED:\r\n      return{...state, token: ''}\r\n    default: return state\r\n  }\r\n}","\r\nimport { SET_MESSAGE } from '../actions/auth';\r\nimport { todosActionsType, GET_ITEMS, SET_TODO_LOADING, } from './../actions/todos';\r\n\r\n\r\nexport type itemType = { id: string, label: string, isDone: boolean, isImportant: boolean }\r\nexport type todosType = typeof initState;\r\n\r\nconst initState = {\r\n  loading: false,\r\n  error: '',\r\n  todos: [] as Array<itemType>\r\n}\r\nexport const todosReducer = (state: todosType = initState, action: todosActionsType): todosType => {\r\n  switch (action.type) {\r\n    case GET_ITEMS:\r\n      return{...state, todos:[...action.items]}\r\n    case SET_TODO_LOADING:\r\n      return { ...state, loading: action.loading }\r\n      case SET_MESSAGE:\r\n      return{...state, error:action.message}\r\n    default: return state\r\n  }\r\n}","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\n\r\nimport thunk from \"redux-thunk\";\r\nimport { authReducer } from \"./reducers/auth\";\r\nimport { todosReducer } from \"./reducers/todos\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n  auth: authReducer,\r\n  todos: todosReducer\r\n});\r\n\r\ntype rootReducerType = typeof reducers;\r\nexport type RootStateType = ReturnType<rootReducerType>;\r\n\r\n// @ts-ignore\r\n//const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}